"""empty message

Revision ID: c4d498becade
Revises: 99e30d168b9a
Create Date: 2018-05-27 13:56:55.711131

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c4d498becade'
down_revision = '99e30d168b9a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('student_class_class_id_fkey',
                           'student_class', type_='foreignkey')
    op.create_table('class',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('course_id', sa.String(), nullable=True),
    sa.Column('term', sa.String(), nullable=True),
    sa.Column('class_id', sa.String(), nullable=True),
    sa.Column('teacher_id', sa.String(), nullable=True),
    sa.Column('time', sa.String(), nullable=True),
    sa.Column('place', sa.String(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('enroll', sa.Integer(), nullable=True),
    sa.Column('campus', sa.String(), nullable=True),
    sa.Column('q_time', sa.String(), nullable=True),
    sa.Column('q_place', sa.String(), nullable=True),
    sa.Column('credit', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], ),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('t_class')
    op.create_foreign_key(None, 'student_class', 'class', ['class_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'student_class', type_='foreignkey')
    op.create_foreign_key('student_class_class_id_fkey', 'student_class', 't_class', ['class_id'], ['id'])
    op.create_table('t_class',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('id', postgresql.UUID(), autoincrement=False, nullable=False),
    sa.Column('course_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('term', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('class_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('teacher_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('time', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('place', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('capacity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('enroll', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('campus', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('q_time', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('q_place', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('credit', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.id'], name='t_class_course_id_fkey'),
    sa.ForeignKeyConstraint(['teacher_id'], ['teacher.id'], name='t_class_teacher_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='t_class_pkey')
    )
    op.drop_table('class')
    # ### end Alembic commands ###
